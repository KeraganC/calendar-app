{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html>\
<head>\
  <meta charset="UTF-8">\
  <title>Public Calendar App</title>\
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet">\
  <style>\
    body \{ font-family: Arial, sans-serif; padding: 20px; \}\
    #filter-container \{ margin-bottom: 20px; \}\
    select \{ padding: 6px; width: 200px; height: 100px; \}\
  </style>\
</head>\
<body>\
  <h2>Event Calendar</h2>\
\
  <div id="filter-container">\
    <label for="categoryFilter">Filter by Category:</label><br>\
    <select id="categoryFilter" multiple>\
      <option value="Yoga">Yoga</option>\
      <option value="Workshop">Workshop</option>\
      <option value="Beginner">Beginner</option>\
      <option value="Webinar">Webinar</option>\
    </select>\
  </div>\
\
  <div id="calendar"></div>\
\
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.js"></script>\
  <script src="https://apis.google.com/js/api.js"></script>\
  <script>\
    const calendarId = "e1ca9c45363767d2fd0d586ac7f586617b5699acb6fefdf827003fef0faf0602@group.calendar.google.com";\
    const apiKey = "AIzaSyCNgCX-JYI5IYvwaH_BwU5btC77ZiVe74M";\
\
    function parseCategories(description = "") \{\
      const match = description.match(/Category:\\s*(.+)/i);\
      return match ? match[1].split(',').map(c => c.trim()) : ["Uncategorized"];\
    \}\
\
    function initCalendar(events) \{\
      const calendarEl = document.getElementById('calendar');\
      const calendar = new FullCalendar.Calendar(calendarEl, \{\
        initialView: 'dayGridMonth',\
        headerToolbar: \{\
          left: 'prev,next today',\
          center: 'title',\
          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\
        \},\
        events: events,\
        eventClick: function(info) \{\
          alert(info.event.title + "\\n\\n" + info.event.extendedProps.description);\
        \}\
      \});\
      calendar.render();\
\
      document.getElementById("categoryFilter").addEventListener("change", function() \{\
        const selected = Array.from(this.selectedOptions).map(opt => opt.value);\
        calendar.getEvents().forEach(event => \{\
          const match = event.extendedProps.categories.some(cat => selected.includes(cat)) || selected.length === 0;\
          event.setProp("display", match ? "auto" : "none");\
        \});\
      \});\
    \}\
\
    function loadEvents() \{\
      gapi.client.init(\{ apiKey: apiKey \}).then(() => \{\
        return gapi.client.calendar.events.list(\{\
          calendarId: calendarId,\
          timeMin: new Date().toISOString(),\
          showDeleted: false,\
          singleEvents: true,\
          orderBy: 'startTime'\
        \});\
      \}).then(response => \{\
        const events = response.result.items.map(event => (\{\
          title: event.summary,\
          start: event.start.dateTime || event.start.date,\
          end: event.end.dateTime || event.end.date,\
          extendedProps: \{\
            description: event.description || "",\
            location: event.location || "",\
            categories: parseCategories(event.description || "")\
          \}\
        \}));\
        initCalendar(events);\
      \});\
    \}\
\
    gapi.load("client", loadEvents);\
  </script>\
</body>\
</html>\
}